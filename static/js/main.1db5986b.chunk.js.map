{"version":3,"sources":["JavascriptCalculator.js","App.js","index.js"],"names":["JavascriptCalculator","useState","display","setDisplay","maxDigitMessageDisplay","setMaxDigitMessageDisplay","regexZero","maxDigitLimit","setTimeout","handleNumbers","e","length","number","target","value","test","concat","handleOperators","operator","slice","className","border","align","width","colSpan","id","onClick","rowSpan","displayParam","toBeEvaluated","evaluate","toString","handleEqual","decimal","App","rel","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1db5986b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { evaluate } from 'mathjs';\r\nimport './index.scss';\r\n\r\nconst JavascriptCalculator = () => {\r\n\r\n    const [display, setDisplay] = useState(0);\r\n    const [maxDigitMessageDisplay, setMaxDigitMessageDisplay ] = useState(null);\r\n    const regexZero = /^0$/g;\r\n\r\n    const maxDigitLimit = () => {\r\n        const MaxDigitMessage = \"   Max Digits Allowed\";\r\n        setMaxDigitMessageDisplay(MaxDigitMessage)\r\n            setTimeout(() => {setMaxDigitMessageDisplay(null)}, 750)\r\n    };\r\n\r\n    const handleNumbers = (e) => {\r\n        if(display.length > 21){\r\n            maxDigitLimit();\r\n        }\r\n        else {\r\n            const number = e.target.value;\r\n            const regexZeroFollowedByDecimal = /^0[.]/g;\r\n\r\n            if (regexZeroFollowedByDecimal.test(display)){\r\n                return setDisplay(display.concat(number));\r\n            }\r\n            else if(regexZero.test(display) && number !== 0) {\r\n                return setDisplay(number);\r\n            }\r\n            else if (number === \"0\" && display === \"0\"){\r\n                return display;\r\n            }\r\n            else {\r\n                return setDisplay(display.concat(number));\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleOperators = (operator) => {\r\n        if(display.length > 21){\r\n            maxDigitLimit();\r\n        }\r\n        else {\r\n            const regexOperatorTestMoreThanOne = /\\d+([*]$|[/]$|[+]$)|(\\d+[-]{1}?$)/g;\r\n            const regexOperatorEndsWithNegative = /\\d+[-]{1}?$/g;\r\n            const regexOperatorMoreThanTwo = /[-/*+]{2}?$/g;\r\n\r\n                if(regexZero.test(display)){\r\n                    return setDisplay(\"0\".concat(operator));\r\n                }\r\n                else if (regexOperatorTestMoreThanOne.test(display) && operator !== \"-\"){\r\n                    return setDisplay(display.slice(0, -1).concat(operator));\r\n                }\r\n                else if (regexOperatorEndsWithNegative.test(display) && operator === \"-\"){\r\n                    return setDisplay(display.concat(operator));\r\n                }\r\n                else if (regexOperatorMoreThanTwo.test(display)){\r\n                    return setDisplay(display.slice(0, -2).concat(operator));\r\n                }\r\n                else {\r\n                    return setDisplay(display.concat(operator));\r\n                }\r\n        }\r\n    };\r\n\r\n    const handleDecimals = (e) => {\r\n        if(display.length > 21){\r\n            maxDigitLimit();\r\n        }\r\n        else {\r\n            const decimal = e.target.value;\r\n            const regexDecimal = /[.]{1}$|\\d*[.]\\d+$/g;\r\n            const regexDecimalBeforeOperatorWithZero = /(\\d*[/*+-]$)/g;\r\n            const regexTwoZerosFollowedByDecimal = /0{2}[.]/g;\r\n\r\n            if(regexZero.test(display)) {\r\n                return setDisplay(\"0\".concat(decimal));\r\n            }\r\n            else if(regexDecimal.test(display)){\r\n                return display;\r\n            }\r\n            else if (regexDecimalBeforeOperatorWithZero.test(display) && !regexTwoZerosFollowedByDecimal.test(display.concat(\"0\".concat(decimal)))){\r\n                return setDisplay(display.concat(\"0\".concat(decimal)));\r\n            }\r\n            else {\r\n                return setDisplay(display.concat(decimal));\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleEqual = (displayParam) => {\r\n        const regexEndsWithOperator = /[/*-+]{1}$/g\r\n        if(regexEndsWithOperator.test(displayParam)){\r\n            return display;\r\n        }\r\n        else {\r\n        let toBeEvaluated = evaluate(displayParam).toString();\r\n        return setDisplay(toBeEvaluated);\r\n        }\r\n    };\r\n\r\n    return ( \r\n    \r\n    <div className=\"container-fluid\">\r\n        <table className=\"calculator-container\" border=\"0\" align=\"center\" width=\"100%\">\r\n            <tbody>\r\n                <tr>\r\n                    <td colSpan=\"5\" id=\"display\">\r\n                        <div>\r\n                        {maxDigitMessageDisplay === null ? display : maxDigitMessageDisplay}\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td><button id=\"seven\" className=\"btn btn-secondary\" value=\"7\" onClick={handleNumbers}>7</button></td>\r\n                    <td><button id=\"eight\" className=\"btn btn-secondary\" value=\"8\" onClick={handleNumbers}>8</button></td>\r\n                    <td><button id=\"nine\" className=\"btn btn-secondary\" value=\"9\" onClick={handleNumbers}>9</button></td>\r\n                    <td><button id=\"divide\" className=\"btn btn-primary\" onClick={() => handleOperators(\"/\")}><i className=\"fas fa-divide\"></i></button></td>\r\n                    <td><button id=\"clear\" className=\"btn btn-danger\" onClick={() => setDisplay(0)}>AC</button></td>\r\n                </tr>\r\n                <tr>\r\n                    <td><button id=\"four\" className=\"btn btn-secondary\" value=\"4\" onClick={handleNumbers}>4</button></td>\r\n                    <td><button id=\"five\" className=\"btn btn-secondary\" value=\"5\" onClick={handleNumbers}>5</button></td>\r\n                    <td><button id=\"six\" className=\"btn btn-secondary\" value=\"6\" onClick={handleNumbers}>6</button></td>\r\n                    <td><button id=\"multiply\" className=\"btn btn-primary\" onClick={() => handleOperators(\"*\")}><i className=\"fas fa-times\"></i></button></td>\r\n                    <td rowSpan=\"3\"><button id=\"equals\" className=\"btn btn-success\" value=\"=\" onClick={() => handleEqual(display)}>=</button></td>\r\n                </tr>\r\n                <tr>\r\n                    <td><button id=\"one\" className=\"btn btn-secondary\" value=\"1\" onClick={handleNumbers}>1</button></td>\r\n                    <td><button id=\"two\" className=\"btn btn-secondary\" value=\"2\" onClick={handleNumbers}>2</button></td>\r\n                    <td><button id=\"three\" className=\"btn btn-secondary\" value=\"3\" onClick={handleNumbers}>3</button></td>\r\n                    <td><button id=\"subtract\" className=\"btn btn-primary\" onClick={() => handleOperators(\"-\")}><i className=\"fas fa-minus\"></i></button></td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan=\"2\"><button id=\"zero\" className=\"btn btn-secondary\" value=\"0\" onClick={handleNumbers}>0</button></td>\r\n                    <td><button id=\"decimal\" className=\"btn btn-secondary\"value=\".\" onClick={handleDecimals}>.</button></td>\r\n                    <td><button id=\"add\" className=\"btn btn-primary\" onClick={() => handleOperators(\"+\")}><i className=\"fas fa-plus\"></i></button></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div> \r\n    );\r\n}\r\n \r\nexport default JavascriptCalculator;\r\n","import './index.scss';\nimport React from 'react';\nimport JavascriptCalculator from './JavascriptCalculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Javascript Calculator</h1>\n        <h5><i>This calculator uses immediate execution logic to compute</i></h5>\n      </header>\n      <JavascriptCalculator/>\n      <footer className=\"footer\">\n        Coded By <a \n        target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/russelltheprogrammer\">\n        RussellTheProgrammer</a> for FCC curriculum\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}